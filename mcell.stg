group mcell;

prog2(parameters,molecules,species,reactions,observables,functions,compartments)::=<<
time_step = 1.0
TIME_STEP = time_step 
TIME_STEP_MAX = time_step 
ITERATIONS = 1000 
EFFECTOR_GRID_DENSITY = 10000 
INTERACTION_RADIUS = 0.001
<parameters; separator="\n">
DEFINE_MOLECULES{
  <molecules.keys:{k| S<molecules.(k)> { D_3D = 100e-8 } /*<k>*/}; separator="\n">
}
small_box BOX
{
CORNERS = [-0.1,-0.1,-0.1] , [0.1,0.1,0.1]
}
INSTANTIATE my_world OBJECT 
{
  <species; separator = "\n">
my_box OBJECT small_box {}
}
DEFINE_REACTIONS
{
  <reactions; separator = "\n">
}

REACTION_DATA_OUTPUT
{
STEP = 1e-5
  <observables; separator = "\n">
}

>>


parameter_def(id,value) ::=<<
<id> = <value>
>>

molecules_def(id,sites) ::= <<
<id>(<sites; separator = ".">)
>>

sites_def(id,states) ::= <<
>>



seed_species_block(id,concentration) ::= <<

S<id>_release SPHERICAL_RELEASE_SITE {
  LOCATION = [0,0,0]
  SITE_DIAMETER = 0.196
  MOLECULE = S<id>
  NUMBER_TO_RELEASE = <concentration>
  
}
>>

rule_seed_species_block(id,molecules,firstBonds,secondBonds) ::= <<
<molecules; separator="+">
>>


bond_template(firstElement,secondElement) ::= <<
  
>>


list_molecule_def(id,name,sites,compartment) ::= <<
<id>
>>

component_def(id,name,state,numberOfBonds)::= <<

>>

type_user_object(name) ::= "<name>"

reaction_block(id,name,reactant,product,rate,bidirectional,birate,leftMap,rightMap,operations,operator1,operator2,expression) ::=<<

   
>>

reaction_rules()::=<<

>>

reactions(reactant, product, rate)::=<<
  <reactant: {r | S<r>}; separator="+"> -\> <product: {p | S<p>} ; separator="+"> [<rate>]
>>

groups_block(id,name,type,patterns)::=<<
{COUNT [S<id>,WORLD]} => "eq_<name>.dat"
>>

patterns_block(id,molecules)::=<<
>>

functions_block(id,referencesName,referencesType,expression)::=<<
>>

compartments_block(id,dimensions,size,outside)::=<<
>>

observables_block()::=<<

>>




